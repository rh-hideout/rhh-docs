namespace Hayabusa.Animation;

file_extension "trcma";

struct sVec3 {
    x: uint16;
    y: uint16;
    z: uint16;
}

struct Vec3 {
    x: float; 
    y: float;
    z: float;
}

union RotationTrack { FixedRotationTrack, DynamicRotationTrack, Framed16RotationTrack, Framed8RotationTrack }

table FixedRotationTrack {
    co:sVec3;
}

table DynamicRotationTrack {
    co:[sVec3];
}

table Framed16RotationTrack {
    frames:[uint16];
    co:[sVec3];
}

table Framed8RotationTrack {
    frames:[uint8];
    co:[sVec3];
}

union VectorTrack { 
    FixedVectorTrack, 
    DynamicVectorTrack,  
    Framed16VectorTrack, 
    Framed8VectorTrack 
}

table FixedVectorTrack {
  co: Vec3;
}

table DynamicVectorTrack {
  co: [Vec3];
}

table Framed16VectorTrack {
  frames:[uint16];
  co: [Vec3];
}

table Framed8VectorTrack {
  frames:[uint8];
  co:[Vec3];
}


union FloatTrack {
    FixedFloatTrack,
    DynamicFloatTrack,
    Framed16FloatTrack,
    Framed8FloatTrack,
}

table FixedFloatTrack {
    value: float;
}

table DynamicFloatTrack {
    value: [float];
}

table Framed16FloatTrack {
    frames:[uint16];
    value:[float];
}

table Framed8FloatTrack {
    frames:[uint8];
    value:[float];
}

table AnimationInfo {
    res_0: uint32;
    duration: uint32;
    framerate: uint32;
}

table CameraAnim1 {
    unk_0: FloatTrack;
    unk_1: FloatTrack;
    unk_2: FloatTrack;
}

table CameraAnim2 {
    rotation: RotationTrack;
    translation: VectorTrack;
    unk_2: VectorTrack;
    unk_3: VectorTrack;
    unk_4: VectorTrack;
}

table CamAnimation {
    cam_name: string;
    anim1: CameraAnim1;
    anim2: CameraAnim2;
}

table TRCMA {
    info: AnimationInfo;
    anim: CamAnimation;
}

root_type TRCMA;